{"version":3,"sources":["webpack:///./src/components/ReadLink.js","webpack:///./src/hooks/usePosts.js","webpack:///./src/components/PostPreview.js","webpack:///./src/pages/blog.js"],"names":["ReadLink","Link","usePosts","allMdx","nodes","map","post","title","frontmatter","slug","author","date","excerpt","image","PostPreview","css","to","fluid","sharp","alt","Blog","posts","Layout","SEO","key"],"mappings":"uHAGMA,EAAW,YAAOC,OAAP,sBAAH,mGAOCD,O,02EC0BAE,EAlCE,WAwBf,OAvBU,OAuBEC,OAAOC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CACpCC,MAAOD,EAAKE,YAAYD,MACxBE,KAAMH,EAAKE,YAAYC,KACvBC,OAAQJ,EAAKE,YAAYE,OACzBC,KAAML,EAAKE,YAAYG,KACvBC,QAASN,EAAKM,QACdC,MAAOP,EAAKE,YAAYK,W,6eCwCbC,EAjEK,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACrB,OACE,uBACES,IAAG,GASH,YAAC,OAAD,CACEC,GAAE,IAAMV,EAAKG,KACbM,IAAG,GAKH,YAAC,IAAD,CACEE,MAAOX,EAAKO,MAAMK,MAAMD,MACxBF,IAAG,EAKHI,IAAKb,EAAKC,SAGd,uBACE,kBACEQ,IAAG,GAIH,YAAC,OAAD,CACEA,IAAG,EAIHC,GAAE,IAAMV,EAAKG,MAEZH,EAAKC,QAGV,iBACEQ,IAAG,GAIFT,EAAKM,SAER,YAACZ,EAAA,EAAD,CACEe,IAAG,EAGHC,GAAE,IAAMV,EAAKG,MAJf,uBCpCOW,UAhBF,WACX,IAAMC,EAAQnB,IACd,OACE,8BACE,YAACoB,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAKhB,MAAM,SACX,uBACGc,EAAMhB,KAAI,SAAAC,GAAI,OACb,YAAC,EAAD,CAAaA,KAAMA,EAAMkB,IAAKlB,EAAKG","file":"component---src-pages-blog-js-a9b7cd471cd82ea8afc7.js","sourcesContent":["import styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nconst ReadLink = styled(Link)`\n  display: inline-block;\n  font-size: 0.875rem;\n  text-decoration: none;\n  color: #fff;\n`\n\nexport default ReadLink\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nconst usePosts = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx {\n        nodes {\n          frontmatter {\n            title\n            slug\n            author\n            date(formatString: \"MMMM DD, YYYY\")\n            image {\n              sharp: childImageSharp {\n                fluid(maxWidth: 100, maxHeight: 100) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  `)\n\n  return data.allMdx.nodes.map(post => ({\n    title: post.frontmatter.title,\n    slug: post.frontmatter.slug,\n    author: post.frontmatter.author,\n    date: post.frontmatter.date,\n    excerpt: post.excerpt,\n    image: post.frontmatter.image,\n  }))\n}\n\nexport default usePosts\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport ReadLink from \"./ReadLink\"\n\nconst PostPreview = ({ post }) => {\n  return (\n    <article\n      css={css`\n        border-bottom: 1px solid #ddd;\n        padding-bottom: 1rem;\n        display: flex;\n        :first-of-type {\n          margin-top: 1rem;\n        }\n      `}\n    >\n      <Link\n        to={`/${post.slug}`}\n        css={css`\n          margin: 1rem 1rem 0 0;\n          min-width: 100px;\n        `}\n      >\n        <Image\n          fluid={post.image.sharp.fluid}\n          css={css`\n            * {\n              margin-top: 0;\n            }\n          `}\n          alt={post.title}\n        />\n      </Link>\n      <div>\n        <h3\n          css={css`\n            margin: 1rem 0 0 0;\n          `}\n        >\n          <Link\n            css={css`\n              text-decoration: none;\n              color: #fff;\n            `}\n            to={`/${post.slug}`}\n          >\n            {post.title}\n          </Link>\n        </h3>\n        <p\n          css={css`\n            margin: 0.5rem 0 0 0;\n          `}\n        >\n          {post.excerpt}\n        </p>\n        <ReadLink\n          css={css`\n            margin: 1rem 0 0 0;\n          `}\n          to={`/${post.slug}`}\n        >\n          read this post &rarr;\n        </ReadLink>\n      </div>\n    </article>\n  )\n}\n\nexport default PostPreview\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport usePosts from \"../hooks/usePosts\"\nimport PostPreview from \"../components/PostPreview\"\nimport { css } from \"@emotion/core\"\n\nconst Blog = () => {\n  const posts = usePosts()\n  return (\n    <>\n      <Layout>\n        <SEO title=\"Blog\" />\n        <div>\n          {posts.map(post => (\n            <PostPreview post={post} key={post.slug} />\n          ))}\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}