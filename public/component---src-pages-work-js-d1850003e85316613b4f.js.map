{"version":3,"sources":["webpack:///./src/hooks/useProjects.js","webpack:///./src/components/ProjectPreview.js","webpack:///./src/pages/work.js","webpack:///./src/components/Pill.js","webpack:///./src/components/ReadLink.js"],"names":["useProjects","allProjectsJson","edges","map","project","slug","node","technologies","title","urlProject","description","instructions","shortDescription","image","ProjectPreview","css","to","fixed","childImageSharp","alt","technology","Pill","key","ReadLink","Work","projects","Layout","SEO","Link"],"mappings":"gKAuCeA,EArCK,WAyBlB,OAxBU,OAwBEC,gBAAgBC,MAAMC,KAAI,SAAAC,GAAO,MAAK,CAChDC,KAAMD,EAAQE,KAAKD,KACnBE,aAAcH,EAAQE,KAAKC,aAC3BC,MAAOJ,EAAQE,KAAKE,MACpBC,WAAYL,EAAQE,KAAKG,WACzBC,YAAaN,EAAQE,KAAKI,YAC1BC,aAAcP,EAAQE,KAAKK,aAC3BC,iBAAkBR,EAAQE,KAAKM,iBAC/BC,MAAOT,EAAQE,KAAKO,W,mnBC+CTC,EA3EQ,SAAC,GAAiB,IAAfV,EAAc,EAAdA,QACxB,OACE,8BACE,mBACEW,IAAG,GAIH,YAAC,OAAD,CACEC,GAAE,QAAUZ,EAAQC,KACpBU,IAAG,GAIH,sBAAKX,EAAQI,SAGjB,mBACEO,IAAG,GAIH,mBACEA,IAAG,GAIH,YAAC,OAAD,CAAMC,GAAE,QAAUZ,EAAQC,KAAQU,IAAKA,eACrC,YAAC,IAAD,CACEE,MAAOb,EAAQS,MAAMK,gBAAgBD,MACrCE,IAAKf,EAAQI,UAKnB,mBACEO,IAAG,GAYH,qBAAIX,EAAQQ,kBACZ,mBACEG,IAAG,GAYFX,EAAQG,aAAaJ,KAAI,SAAAiB,GAAU,OAClC,YAACC,EAAA,EAAD,CAAMC,IAAKF,EAAYA,WAAYA,QAGvC,uBACE,YAACG,EAAA,EAAD,CAAUP,GAAE,QAAUZ,EAAQC,MAA9B,oBCxDGmB,UAZF,WACX,IAAMC,EAAWzB,IACjB,OACE,YAAC0B,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAKnB,MAAM,SACViB,EAAStB,KAAI,SAAAC,GAAO,OACnB,YAAC,EAAD,CAAgBA,QAASA,EAASkB,IAAKlB,EAAQC,a,oCCZvD,0B,4PAwBegB,IArBF,SAAC,GAAD,IAAGD,EAAH,EAAGA,WAAH,OACX,oBACEL,IAAG,GAeFK,K,8DCjBCG,EAAW,YAAOK,OAAP,sBAAH,mGAOCL,O","file":"component---src-pages-work-js-d1850003e85316613b4f.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\nconst useProjects = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allProjectsJson {\n        edges {\n          node {\n            slug\n            technologies\n            title\n            description\n            shortDescription\n            urlProject\n            instructions\n            image {\n              childImageSharp {\n                fixed(width: 180) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return data.allProjectsJson.edges.map(project => ({\n    slug: project.node.slug,\n    technologies: project.node.technologies,\n    title: project.node.title,\n    urlProject: project.node.urlProject,\n    description: project.node.description,\n    instructions: project.node.instructions,\n    shortDescription: project.node.shortDescription,\n    image: project.node.image,\n  }))\n}\n\nexport default useProjects\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport ReadLink from \"./ReadLink\"\nimport Pill from \"./Pill\"\n\nconst ProjectPreview = ({ project }) => {\n  return (\n    <>\n      <div\n        css={css`\n          margin: 1rem 0;\n        `}\n      >\n        <Link\n          to={`work/${project.slug}`}\n          css={css`\n            text-decoration: none;\n          `}\n        >\n          <h3>{project.title}</h3>\n        </Link>\n      </div>\n      <div\n        css={css`\n          display: flex;\n        `}\n      >\n        <div\n          css={css`\n            width: 50%;\n          `}\n        >\n          <Link to={`work/${project.slug}`} css={css``}>\n            <Image\n              fixed={project.image.childImageSharp.fixed}\n              alt={project.title}\n            />\n          </Link>\n        </div>\n\n        <div\n          css={css`\n            width: 50%;\n            margin-left: 2rem;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            @media only screen and (min-width: 768px) {\n              justify-content: space-evenly;\n            }\n          }\n          `}\n        >\n          <p>{project.shortDescription}</p>\n          <div\n            css={css`\n              display: flex;\n              flex-wrap: wrap;\n              justify-content: space-around;\n              @media only screen and (min-width: 768px) {\n                justify-content: flex-start;\n              }\n              span {\n                margin-right: 0.5rem;\n              }\n            `}\n          >\n            {project.technologies.map(technology => (\n              <Pill key={technology} technology={technology} />\n            ))}\n          </div>\n          <div>\n            <ReadLink to={`work/${project.slug}`}>Read more &rarr;</ReadLink>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ProjectPreview\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport useProjects from \"../hooks/useProjects\"\nimport ProjectPreview from \"../components/ProjectPreview\"\n\nconst Work = () => {\n  const projects = useProjects()\n  return (\n    <Layout>\n      <SEO title=\"Work\" />\n      {projects.map(project => (\n        <ProjectPreview project={project} key={project.slug} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default Work\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\n\nconst Pill = ({ technology }) => (\n  <span\n    css={css`\n      display: inline-block;\n      padding: 0.25em 0.6em;\n      font-size: 75%;\n      font-weight: 700;\n      line-height: 1;\n      text-align: center;\n      white-space: nowrap;\n      vertical-align: baseline;\n      border-radius: 10rem;\n      background-color: #fff;\n      color: #007bff;\n      margin-bottom: 0.5rem;\n    `}\n  >\n    {technology}\n  </span>\n)\n\nexport default Pill\n","import styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nconst ReadLink = styled(Link)`\n  display: inline-block;\n  font-size: 0.875rem;\n  text-decoration: none;\n  color: #fff;\n`\n\nexport default ReadLink\n"],"sourceRoot":""}